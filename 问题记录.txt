1、electron的main.ts debugger 没有用
2、如果出现fs 模块为proxy 考虑引入方式是否写错 用require 不要用import format
3、require未定义，检测是否有node环境，再main中设置nodeIntegration：true，contextIsolation：false
4、Node-API 版本矩阵 https://nodejs.org/api/n-api.html#node-api-version-matrix
5、"postinstall": "install-app-deps" 是一个在 package.json 文件中定义的 npm 脚本命令，用于在 npm install 命令完成后执行一些额外的任务
6、sqlite3使用5.1.6构建，5.1.7找不到包
7、"ffi-napi": "^4.0.3",不支持Electron 20.3.8 版本之后
8、fatal error C1083: xxxxxx  No such file or directory 【xx-xxx\ffi-napi\build\ffi_bindings.vcxproj】，路径中不能带“-”或者空格，任务管理器结束掉viscode、占用文件的进程，在CPU中搜索句柄或者重启电脑试试看,删除package-lock重新安装试试,路径不要大小写，有可能和网络有关系
9、npm i卡到删除package-lock再试
10、[ERROR] Could not resolve "mock-aws-s3"
[0]
[0]     node_modules/@mapbox/node-pre-gyp/lib/util/s3_setup.js:43:28:
[0]       43 │     const AWSMock = require('mock-aws-s3');
重新跑一下
11、终端中文乱码 输入chcp 65001
12、npm ERR! 'C:\Program' is not recognized as an internal or external command, 解决：更换node地址，不要放在有空格的文件
13、electron-log为error才会被生产环境记录
14、不打包成asar，package.json设置 "asar": false,
15、C:\Users\Administrator\AppData\Roaming\vite-vue3-electron-ts-template\logs
16、主进程查看console，使用黑窗口运行程序
17、使用Array.from()来直接将Buffer对象中的double数据转换为数组可能会遇到问题，因为Buffer对象中存储的数据是以字节为单位的，而Array.from()默认情况下会将每个字节转换为对应的Unicode字符。
当Buffer中存储的是int32类型数据时，直接使用bufferl[0]可以正确地获取数据，这是因为Buffer对象中的索引访问是按字节来进行的，而int32是4个字节长，因此每个int32的值会占据连续的4个字节，这样直接通过bufferl[0]可以获取到正确的int32数据。
但是当Buffer中存储的是double类型数据时，double通常是8个字节长，而Buffer对象中的索引访问仍然是按字节进行的。因此，直接使用bufferl[0]去获取double数据可能会出现问题，因为double的每个值需要8个字节，而不是单个字节。
如果您需要正确地提取double类型数据，您可以使用readDoubleLE或readDoubleBE方法来从Buffer中读取double类型数据。这样可以确保您正确地获取到double数据。
18、主进程console不显示，有可能有错误的地方，比如main里面加了其他文件不能解析出来
